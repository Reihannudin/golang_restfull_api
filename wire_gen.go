// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-playground/validator"
	"github.com/google/wire"
	"golang_rest_api_learn/app"
	"golang_rest_api_learn/controller"
	"golang_rest_api_learn/middleware"
	"golang_rest_api_learn/repository"
	"golang_rest_api_learn/service"
	"net/http"
)

import (
	_ "github.com/go-sql-driver/mysql"
)

// Injectors from injector.go:

func InitializedServer() *http.Server {
	categoriesRepositoryImpl := repository.NewCategoriesRespository()
	db := app.NewDB()
	validate := validator.New()
	categoriesServiceImpl := service.NewCategoriesService(categoriesRepositoryImpl, db, validate)
	categoriesControllerImpl := controller.NewCategoriesController(categoriesServiceImpl)
	router := app.NewRouter(categoriesControllerImpl)
	authMiddleware := middleware.NewAuthMiddleware(router)
	server := NewServer(authMiddleware)
	return server
}

// injector.go:

var categorySet = wire.NewSet(repository.NewCategoriesRespository, wire.Bind(new(repository.CategoriesRepository), new(*repository.CategoriesRepositoryImpl)), service.NewCategoriesService, wire.Bind(new(service.CategoriesService), new(*service.CategoriesServiceImpl)), controller.NewCategoriesController, wire.Bind(new(controller.CategoriesController), new(*controller.CategoriesControllerImpl)))
